class u{static parse(t,s){if(!t)return null;const d=t.split(/[/|:|\s]/).map(e=>Number(e));if(d.some(e=>isNaN(e)||Math.floor(e)!==e))return null;const a=s.split(/[/|:|\s]/);let c=!1;const l=(e,n,o,f=0)=>{if(!c){if(n<f||n>o){c=!0;return}e(n)}};let r=0;for(const e of a)(e==="dd"||e==="MM"||e==="yyyy"||e==="HH"||e==="mm"||e==="ss")&&r++;const i=new u(new Date(0)).startOfDay().toDate();return d.forEach((e,n)=>{n>=a.length||(a[n]==="dd"?(r--,l(o=>i.setDate(o),e,31,1)):a[n]==="MM"?(r--,l(o=>i.setMonth(o),e-1,11)):a[n]==="yyyy"?(e<1e3&&(c=!0),r--,l(o=>i.setFullYear(o),e,9999,1)):a[n]==="HH"?(r--,l(o=>i.setHours(o),e,23)):a[n]==="mm"?(r--,l(o=>i.setMinutes(o),e,59)):a[n]==="ss"&&(r--,l(o=>i.setSeconds(o),e,59)))}),c||r!=0?null:new u(i)}static workingDaysBetweenDates(t,s,d){if(s<t)return 0;let a=0;for(let o=0;o<d.length;o++){const f=d[o];if(f){const h=f.getDay();f>=t&&f<=s&&h!==0&&h!==6&&a++}}const c=86400*1e3;t.setHours(0,0,0,1),s.setHours(23,59,59,999);const l=s.getTime()-t.getTime();let r=Math.ceil(l/c);const i=Math.floor(r/7);r=r-i*2;const e=t.getDay(),n=s.getDay();return e-n>1&&(r=r-2),e===0&&n!==6&&(r=r-1),n===6&&e!==0&&(r=r-1),r-a}constructor(t=new Date){let s;t instanceof u?s=t.dt:s=t,this.dt=new Date(s)}toDate(){return new Date(this.dt)}isSame(t){return this.dt.getTime()===t.dt.getTime()}startOfDay(){const t=new Date(this.dt);return t.setMilliseconds(0),t.setSeconds(0),t.setMinutes(0),t.setHours(0),new u(t)}format(t){const s=(i,e=2)=>{let n=i.toString(10);for(;n.length<e;)n="0"+n;return n},d=this.dt.getDate(),a=this.dt.getMonth()+1,c=this.dt.getFullYear(),l=this.dt.getHours();let r=t;if(r=r.replace("dd",s(d)).replace("MM",s(a)).replace("yyyy",s(c,4)).replace("HH",s(this.dt.getHours())).replace("mm",s(this.dt.getMinutes())).replace("ss",s(this.dt.getSeconds())),r.indexOf("hh")>-1){const i=l%12;r.replace("hh",s(i===0?12:i)),r+=l<=11?" AM":" PM"}return r}toString(){return`[DateHelper ${this.dt}]`}formattedDate(){return this.dt?new u(this.dt).format("dd/MM/yyyy"):""}formattedDateHour(){return this.dt?new u(this.dt).format("dd/MM/yyyy HH:mm"):""}formattedHour(){return this.dt?new u(this.dt).format("HH:mm"):""}}function y(m,t){return new u(m).format(t)}function g(m){let t="rgb("+getComputedStyle(document.documentElement).getPropertyValue("--"+m)+")";return t=t.replace("( ","(").replace(/ /g,","),t}function M(m,t){let s="rgb("+getComputedStyle(document.documentElement).getPropertyValue("--"+m)+")";return s=s.replace("( ","(").replace(/ /g,","),s=s.replace(")",", "+t+")"),s}export{u as D,M as a,y as b,g};
